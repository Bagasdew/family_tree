c
child.errors.first.type == :taken
child.errors.first.type
c
child.errors
c
child.errors
exit
child.errors
c
mother.male?
exit
mother
exit
child.errors.first.type
child.errors.first
child.errors.to_s
child.errors
child.valid?
child.errors
errors
child, errors = Person.new(mother_name: mother_name, name: name, gender: gender )
errors
c
exit
contents
c
result
name
c
result
name
c
result
name
exit
person.try(relationship_type.downcase)
relationship_type.downcase
relationship_type.lower
person.paternal_uncle
person
relationship_type
exit
mother.id
FamilyLine.all
FamilyLines.all
mother.spouse
mother
c
p
p.spouse
 FamilyLine.where(ancestor_id: self.id, relationship_type: :spouse).first&.person
self.male?
exit
 FamilyLine.where(person_id: self.id, relationship_type: :spouse).first&.person
self.male?
self.name
c
exit
Person.find 2
family_data
self.name
c
self.name
family_data
exit
siblings.map {|s| [s.person.name, s.person.id]}
family_data
Person.where(name:'Ronald')
Person.all
self.name
family_data
siblings.map {|s| [s.person.name, s.person.id]}
siblings.map {|s| [s.person.name, s.persons.id]}
siblings.map {|s| s.person.name, s.persons.id}
siblings.map {|s| s.person.name}
siblings.map do {|s| s.person.name}
siblings.map(&:name)
siblings.map(:name)
siblings
Person.find 7
family_data
exit
in_law
exit
c
exit
siblings = FamilyLine.where(ancestor_id: mother.id, relationship_type: :mother)
mother.spouse.siblings
mother.spouse
mother.siblings
mother.spouse
mother
self.name
c
mother.spouse.name
mother.spouse
self.name
c
exit
mother.siblings
mother.spouse.ancestor
mother.spouse.person
mother.spouse
exit
mother.siblings
mother.spouse.to_sql
mother.spouse
mother
mother_name
c
FamilyLine
Person
exit
FamilyLine
Person
Persons
FamilyLines
People
Person
exit
 relationship = FamilyLine.new(person_id: queen.id, ancestor_id: king.id, relationship_type: :spouse)
exit
relationship = FamilyLine.new(person_id: queen.id, ancestor_id: king.id, relationship_type: :spouse)
relationship = FamilyLine.new(person: queen, ancestor: king, relationship_type: :spouse)
queen.id
